html, body, div, form {
    cursor: url('/cursors/default.svg'), auto;
}

p, span,h1, h2, h3, h4, h5, h6, li, dl, dt,
code, blockquote, pre, ins, kbd, q, s, samp,
small, strong, sub, sup, fieldset, details,
output, ruby, menu, time, mark, summary,
label, legend, hgroup, ::selection {
    cursor: url('/cursors/textcursor.svg'), text;
}

a, button, input[type="button"],
input[type="submit"], input[type="checkbox"],
input[type="color"], input[type="date"],
input[type="datetime-local"], input[type="file"],
input[type="month"], input[type="radio"],
input[type="reset"], input[type="time"],
input[type="week"] {
    * {
        cursor: url('/cursors/handpointing.svg'), pointer;
    }
    
    cursor: url('/cursors/handpointing.svg'), pointer;
}

img, figure, picture {
    cursor: url('/cursors/handopen.svg'), grab;
}

img:active, figure:active, picture:active {
    cursor: url('/cursors/handgrabbing.svg'), grabbing;
}

table, caption, tbody, tfoot, thead, tr,
th, td {
    cursor: url('/cursors/cell.svg'), cell;
}

abbr, acronym, [title] {
    cursor: url('/cursors/help.svg'), help;
}

body.waiting, .waiting {
    cursor: url('/cursors/busy.svg'), wait;
}

.zoom-in {
    cursor: url('/cursors/zoomin.svg'), zoom-in;
}

.zoom-out {
    cursor: url('/cursors/zoomout.svg'), zoom-out;
}

.resize-north {
    cursor: url('/cursors/resizenorth.svg'), n-resize;
}

.resize-south {
    cursor: url('/cursors/resizesouth.svg'), s-resize;
}

.resize-east {
    cursor: url('/cursors/resizeeast.svg'), e-resize;
}

.resize-west {
    cursor: url('/cursors/resizewest.svg'), w-resize;
}

.resize-northsouth {
    cursor: url('/cursors/resizenorthsouth.svg'), ns-resize;
}

.resize-leftright {
    cursor: url('/cursors/resizeleftright.svg'), ew-resize;
}

.resize-northeast-southwest {
    cursor: url('/cursors/resizenortheastsouthwest.svg'), nesw-resize;
}

.resize-northwest-southeast {
    cursor: url('/cursors/resizenorthwestsoutheast.svg'), nwse-resize;
}

[draggable="true"], .draggable {
    cursor: url('/cursors/move.svg'), move;
}

.not-allowed, fieldset[disabled], input[disabled] {
    cursor: url('/cursors/notallowed.svg'), not-allowed;
}

.add {
    cursor: url('/cursors/makealias.svg'), alias;
}

.context-menu {
    cursor: url('/cursors/contextualmenu.svg'), context-menu;
}

.delete {
    cursor: url('/cursors/poof.svg'), none;
}

.precision {
    cursor: url('/cursors/cross.svg'), crosshair;
}

.loading {
    cursor: url('/cursors/beachball.svg'), wait;
}

.copy {
    cursor: url('/cursors/copy.svg'), copy;
}
